//
// PtObject.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import ObjectMapper


open class PtObject: JSONEncodable, Mappable {

    public var embeddedType: String?
    public var network: Network?
    public var route: Route?
    public var stopArea: StopArea?
    public var commercialMode: CommercialMode?
    /** Identifier of the object */
    public var id: String?
    public var line: Line?
    public var quality: Int32?
    public var trip: Trip?
    /** Name of the object */
    public var name: String?

    public init() {}
    required public init?(map: Map) {

    }


    public func mapping(map: Map) {
        embeddedType <- map["embedded_type"]
        network <- map["network"]
        route <- map["route"]
        stopArea <- map["stop_area"]
        commercialMode <- map["commercial_mode"]
        id <- map["id"]
        line <- map["line"]
        quality <- map["quality"]
        trip <- map["trip"]
        name <- map["name"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["embedded_type"] = self.embeddedType
        nillableDictionary["network"] = self.network?.encodeToJSON()
        nillableDictionary["route"] = self.route?.encodeToJSON()
        nillableDictionary["stop_area"] = self.stopArea?.encodeToJSON()
        nillableDictionary["commercial_mode"] = self.commercialMode?.encodeToJSON()
        nillableDictionary["id"] = self.id
        nillableDictionary["line"] = self.line?.encodeToJSON()
        nillableDictionary["quality"] = self.quality?.encodeToJSON()
        nillableDictionary["trip"] = self.trip?.encodeToJSON()
        nillableDictionary["name"] = self.name

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
