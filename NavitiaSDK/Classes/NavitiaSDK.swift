import Foundation

open class NavitiaSDK: NSObject {
    public let addressesApi: AddressesApi
    public let calendarsApi: CalendarsApi
    public let commercialModesApi: CommercialModesApi
    public let companiesApi: CompaniesApi
    public let contributorsApi: ContributorsApi
    public let coordApi: CoordApi
    public let coordsApi: CoordsApi
    public let coverageApi: CoverageApi
    public let datasetsApi: DatasetsApi
    public let disruptionsApi: DisruptionsApi
    public let equipmentReportsApi: EquipmentReportsApi
    public let geoStatusApi: GeoStatusApi
    public let graphicalIsochroneApi: GraphicalIsochroneApi
    public let heatMapApi: HeatMapApi
    public let journeyPatternPointsApi: JourneyPatternPointsApi
    public let journeyPatternsApi: JourneyPatternsApi
    public let journeysApi: JourneysApi
    public let lineGroupsApi: LineGroupsApi
    public let lineReportsApi: LineReportsApi
    public let linesApi: LinesApi
    public let networksApi: NetworksApi
    public let nextArrivalsApi: NextArrivalsApi
    public let nextDeparturesApi: NextDeparturesApi
    public let physicalModesApi: PhysicalModesApi
    public let placeUriApi: PlaceUriApi
    public let placesApi: PlacesApi
    public let placesNearbyApi: PlacesNearbyApi
    public let poiTypesApi: PoiTypesApi
    public let poisApi: PoisApi
    public let ptobjectsApi: PtobjectsApi
    public let routeSchedulesApi: RouteSchedulesApi
    public let routesApi: RoutesApi
    public let stopAreasApi: StopAreasApi
    public let stopPointsApi: StopPointsApi
    public let stopSchedulesApi: StopSchedulesApi
    public let trafficReportApi: TrafficReportApi
    public let tripsApi: TripsApi
    public let vehicleJourneysApi: VehicleJourneysApi

    public init(configuration:NavitiaConfiguration) {
        self.addressesApi = AddressesApi(token: configuration.token);
        self.calendarsApi = CalendarsApi(token: configuration.token);
        self.commercialModesApi = CommercialModesApi(token: configuration.token);
        self.companiesApi = CompaniesApi(token: configuration.token);
        self.contributorsApi = ContributorsApi(token: configuration.token);
        self.coordApi = CoordApi(token: configuration.token);
        self.coordsApi = CoordsApi(token: configuration.token);
        self.coverageApi = CoverageApi(token: configuration.token);
        self.datasetsApi = DatasetsApi(token: configuration.token);
        self.disruptionsApi = DisruptionsApi(token: configuration.token);
        self.equipmentReportsApi = EquipmentReportsApi(token: configuration.token);
        self.geoStatusApi = GeoStatusApi(token: configuration.token);
        self.graphicalIsochroneApi = GraphicalIsochroneApi(token: configuration.token);
        self.heatMapApi = HeatMapApi(token: configuration.token);
        self.journeyPatternPointsApi = JourneyPatternPointsApi(token: configuration.token);
        self.journeyPatternsApi = JourneyPatternsApi(token: configuration.token);
        self.journeysApi = JourneysApi(token: configuration.token);
        self.lineGroupsApi = LineGroupsApi(token: configuration.token);
        self.lineReportsApi = LineReportsApi(token: configuration.token);
        self.linesApi = LinesApi(token: configuration.token);
        self.networksApi = NetworksApi(token: configuration.token);
        self.nextArrivalsApi = NextArrivalsApi(token: configuration.token);
        self.nextDeparturesApi = NextDeparturesApi(token: configuration.token);
        self.physicalModesApi = PhysicalModesApi(token: configuration.token);
        self.placeUriApi = PlaceUriApi(token: configuration.token);
        self.placesApi = PlacesApi(token: configuration.token);
        self.placesNearbyApi = PlacesNearbyApi(token: configuration.token);
        self.poiTypesApi = PoiTypesApi(token: configuration.token);
        self.poisApi = PoisApi(token: configuration.token);
        self.ptobjectsApi = PtobjectsApi(token: configuration.token);
        self.routeSchedulesApi = RouteSchedulesApi(token: configuration.token);
        self.routesApi = RoutesApi(token: configuration.token);
        self.stopAreasApi = StopAreasApi(token: configuration.token);
        self.stopPointsApi = StopPointsApi(token: configuration.token);
        self.stopSchedulesApi = StopSchedulesApi(token: configuration.token);
        self.trafficReportApi = TrafficReportApi(token: configuration.token);
        self.tripsApi = TripsApi(token: configuration.token);
        self.vehicleJourneysApi = VehicleJourneysApi(token: configuration.token);
    }
}
