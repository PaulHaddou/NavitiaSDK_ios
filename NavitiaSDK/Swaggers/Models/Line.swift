//
// Line.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Line: Codable {

    public var comment: String?
    public var properties: [Property]?
    public var code: String
    public var network: Network?
    public var links: [LinkSchema]
    public var color: String?
    public var routes: [Route]?
    public var geojson: MultiLineStringSchema?
    public var textColor: String?
    public var physicalModes: [PhysicalMode]?
    public var codes: [Code]?
    public var comments: [Comment]?
    public var closingTime: String?
    public var openingTime: String?
    public var commercialMode: CommercialMode?
    /** Identifier of the object */
    public var _id: String
    public var lineGroups: [LineGroup]?
    /** Name of the object */
    public var name: String

    public init(comment: String?, properties: [Property]?, code: String, network: Network?, links: [LinkSchema], color: String?, routes: [Route]?, geojson: MultiLineStringSchema?, textColor: String?, physicalModes: [PhysicalMode]?, codes: [Code]?, comments: [Comment]?, closingTime: String?, openingTime: String?, commercialMode: CommercialMode?, _id: String, lineGroups: [LineGroup]?, name: String) {
        self.comment = comment
        self.properties = properties
        self.code = code
        self.network = network
        self.links = links
        self.color = color
        self.routes = routes
        self.geojson = geojson
        self.textColor = textColor
        self.physicalModes = physicalModes
        self.codes = codes
        self.comments = comments
        self.closingTime = closingTime
        self.openingTime = openingTime
        self.commercialMode = commercialMode
        self._id = _id
        self.lineGroups = lineGroups
        self.name = name
    }

    public enum CodingKeys: String, CodingKey { 
        case comment
        case properties
        case code
        case network
        case links
        case color
        case routes
        case geojson
        case textColor = "text_color"
        case physicalModes = "physical_modes"
        case codes
        case comments
        case closingTime = "closing_time"
        case openingTime = "opening_time"
        case commercialMode = "commercial_mode"
        case _id = "id"
        case lineGroups = "line_groups"
        case name
    }


}

